{"version":3,"sources":["reducers.js","store.js","actions.js","CustomFields.js","axiosConfig.js","ShowAll.js","ValidationSchema.js","Signout.js","App.js","Login.js","serviceWorker.js","authentication.js","index.js","logo.svg"],"names":["initialState","fromJS","console","log","storage","state","action","type","get","set","data","localStorage","setItem","access_token","store","createStore","login","signoutAction","incr","CustomField","placeholder","props","useField","fields","metas","Box","component","m","max-width","TextField","helperText","error","width","id","size","variant","instance","axios","create","baseURL","headers","interceptors","request","use","config","Authorization","token","window","getItem","Promise","reject","ShowAll","dispatch","useDispatch","useState","setData","loading","setLoading","update","useCallback","result","useEffect","a","async","Object","keys","length","then","response","catch","err","fetchData","Button","onClick","yes","disabled","color","loginSchema","Yup","shape","password","min","max","required","email","postHorseSchema","horse_name","horse_number","age_verified","ushja_registered","dob","validateYupSchema","Signout","status","setStatus","clearStore","to","as","display","justifyContent","position","left","clear","mr","pr","Mypick","label","ml","pl","FormControlLabel","control","Component","CustomDatePicker","setFieldValue","useFormikContext","dateFormat","strictParsing","onChange","val","name","getFullYear","String","getMonth","padStart","getDate","MySelect","mt","mb","FormControl","p","height","InputLabel","Select","MenuItem","value","App","sha512","post","className","Grid","container","direction","justify","alignItems","initialValues","validationSchema","formValidationSchema","onSubmit","values","setSubmitting","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Radio","Checkbox","onChanging","fullWidth","JSON","stringify","Container","styled","div","Login","setLogin","hashed","method","url","toString","pathname","location","Boolean","hostname","match","Authenticate","withRouter","ReactDOM","render","exact","path","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5b9600ab.chunk.js","sourcesContent":["import {fromJS, Map as ImmutableMap, toJS} from \"immutable\";\r\n\r\n// const initialState  = fromJS( {\r\n//     userData:{}\r\n// })\r\n\r\nconst initialState = fromJS({\r\n    \"userData\":{},\r\n    \"val\":0\r\n });\r\n console.log(initialState)\r\n \r\nfunction storage (state=initialState, action){\r\n    // state = fromJS(state);\r\n    console.log(action);\r\n    switch (action.type){\r\n        case \"incr\":\r\n            console.log(state)\r\n            console.log(state.get(\"val\"))\r\n         return state.set(\"val\", 1)\r\n        case \"get\" :\r\n            console.log(action.data)\r\n        return state\r\n        case \"login\":\r\n            console.log(action.data)\r\n            localStorage.setItem(\"accessToken\", action.data.data.access_token)\r\n                state = state.set(\"userData\", fromJS(action.data.data));\r\n                // return state.setIn(['userData'], \"dfsd\")\r\n            return state;\r\n        case \"logout\":\r\n            return state;\r\n        default :\r\n            console.log(\"action has missed for \", action);\r\n            return state;\r\n    }\r\n}\r\nexport default storage;","import {createStore} from \"redux\";\r\n\r\nimport storage from \"./reducers\";\r\n\r\nexport const store = createStore(storage);","\r\n\r\nexport const login = (data) => (\r\n    {\r\n        type: \"login\",\r\n        data\r\n    }\r\n);\r\nexport const get = (data) => (\r\n    {\r\n        type: \"get\",\r\n        data\r\n    }\r\n);\r\nexport const put = (data) => (\r\n    {\r\n        type: \"put\",\r\n        data\r\n    }\r\n);\r\nexport const post = (data) => (\r\n    {\r\n        type: \"post\",\r\n        data\r\n    }\r\n);\r\nexport const deleteIt = (data) => (\r\n    {\r\n        type: \"delte\",\r\n        data\r\n    }\r\n);\r\nexport const signoutAction = (data) => (\r\n    {\r\n        type: \"signouts\",\r\n    }\r\n);\r\nexport const incr = () => (\r\n    {\r\n        type: \"incr\"\r\n    }\r\n);\r\n","import {  Field, ErrorMessage, useField } from 'formik';\r\nimport { Form, Button, Row } from 'react-bootstrap';\r\n\r\nimport React, { useState, useEffect, Fragment } from 'react';\r\nimport { FormControlLabel, TextField, Box } from '@material-ui/core';\r\n\r\nfunction CustomField({type, placeholder , ...props}){\r\n    const [fields, metas] = useField(props);\r\n    return (\r\n        <Box component=\"div\" m={2} max-width={\"50%\"}>\r\n            <TextField helperText={metas.error} width={\"200\"} id=\"outlined-basic\" size={props.size}  variant=\"outlined\" type={type}  placeholder={placeholder} {...fields}  />\r\n        </Box>\r\n  );\r\n}\r\n\r\nexport default CustomField;","import  axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n    baseURL: \"http://dev.api.staller.show\",\r\n    headers: {\r\n\t\t'Content-Type': 'application/json'\r\n\t}\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  config => {\r\n    if (!config.headers.Authorization) {\r\n      const token = window.localStorage.getItem(\"accessToken\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n\r\n    return config;\r\n  },\r\n  error => Promise.reject(error)\r\n);\r\n\r\nexport default  instance;","import React, { useState, useEffect, Fragment, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport sha512 from \"sha512\"\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {login, incr, get} from \"./actions\"\r\nimport styled from \"styled-components\";\r\nimport CustomField from \"./CustomFields\"\r\nimport axios from \"axios\";\r\nimport instance from  \"./axiosConfig\"\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import { Form } from \"react-bootstrap\";\r\nimport { Formik, Field, ErrorMessage, useField, useFormikContext } from 'formik';\r\nimport  {Form } from \"formik\"; \r\nimport {TextField, Button,InputLabel, FormControl,   Box,Checkbox, Radio, FormControlLabel, Select, MenuItem, Grid} from \"@material-ui/core\"\r\nfunction ShowAll() {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const update= useCallback((result)=>dispatch(get(result.data)), [dispatch])\r\n  useEffect(() => {\r\n    const fetchData = async (data) => {\r\n      if(Object.keys(data).length>0){\r\n      data[\"age_verified\"]=true;\r\n      console.log(data,\"data\")\r\n      await instance.get('/v1/horses').then((response)=>{ setLoading(true); update(response.data); }).catch((err)=>{setLoading(false)});  ;\r\n    //   setLoading(true)\r\n    // update(result);\r\n    }\r\n    };\r\n    fetchData(data);\r\n  }, [data]);\r\n  return (\r\n    <Button onClick={()=>{setData({yes: true})}} disabled={loading} variant=\"contained\" color=\"primary\"  >Show All </Button>\r\n  )\r\n}\r\n\r\nexport default ShowAll","\r\nimport * as Yup from \"yup\";\r\nimport { validateYupSchema } from \"formik\";\r\n export const loginSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(7, 'Too Short!')\r\n    .max(16, 'Too Long!')\r\n    .required('Required'),\r\n  email: Yup.string()\r\n    .email('Invalid email')\r\n    .required('Required'),\r\n});\r\nexport const postHorseSchema = Yup.object().shape({\r\n    horse_name: Yup.string()\r\n    .min(1,\"Too short\")\r\n    .max(255, \"Too long\")\r\n    .required(\"Reuired\"),\r\n    horse_number: Yup.string()\r\n    .min(1, \"Too Short\")\r\n    .min(100, \"Too long\"),\r\n    age_verified: Yup.string()\r\n    .required(\"Required\"),\r\n    ushja_registered: Yup.boolean()\r\n    .required(\"Required\"),\r\n    dob: Yup.date(),\r\n    color: Yup.string()\r\n    .max(255,\"Too long\"),\r\n    ushja_registered: Yup.boolean()\r\n    .required(\"Required\")\r\n})\r\nexport default validateYupSchema","import React, { useState, useEffect, Fragment, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport sha512 from \"sha512\"\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { login, incr, signoutAction } from \"./actions\"\r\nimport ShowAll from \"./ShowAll\";\r\nimport styled from \"styled-components\";\r\nimport CustomField from \"./CustomFields\"\r\nimport axios from \"axios\";\r\nimport instance from \"./axiosConfig\"\r\nimport DatePicker from \"react-datepicker\";\r\nimport {Redirect } from \"react-router-dom\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import { Form } from \"react-bootstrap\";\r\nimport { Formik, Field, ErrorMessage, useField, useFormikContext } from 'formik';\r\nimport { Form } from \"formik\";\r\nimport * as formValidationSchema from \"./ValidationSchema\"\r\nimport { TextField, Button, InputLabel, FormControl, Box, Checkbox, Radio, FormControlLabel, Select, MenuItem, Grid } from \"@material-ui/core\"\r\n\r\n\r\n\r\nexport default function Signout(){\r\n    const dispatch=useDispatch();\r\n    const [status, setStatus]=useState(false);\r\n    const clearStore=useCallback(()=>(dispatch(signoutAction())),[dispatch])\r\n    const handleClick = ()=>{\r\n        window.localStorage.clear()\r\n        clearStore();\r\n        setStatus(true);\r\n    }\r\n    return ( \r\n            status?<Redirect to=\"/\" />: <Box as=\"div\" display=\"flex\" justifyContent=\"flex-end\" position left> <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" mr={4} pr={4} >Signout</Button></Box>     \r\n    )\r\n}","import React, { useState, useEffect, Fragment, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport sha512 from \"sha512\"\nimport logo from './logo.svg';\nimport './App.css';\nimport { login, incr } from \"./actions\"\nimport ShowAll from \"./ShowAll\";\nimport styled from \"styled-components\";\nimport CustomField from \"./CustomFields\"\nimport axios from \"axios\";\nimport instance from \"./axiosConfig\"\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Signout from \"./Signout\";\n// import { Form } from \"react-bootstrap\";\nimport { Formik, Field, ErrorMessage, useField, useFormikContext } from 'formik';\nimport { Form } from \"formik\";\nimport * as formValidationSchema from \"./ValidationSchema\"\nimport { TextField, Button, InputLabel, FormControl, Box, Checkbox, Radio, FormControlLabel, Select, MenuItem, Grid } from \"@material-ui/core\"\n// import { Button } from \"react-bootstrap\";\n// import { Form, Row } from 'react-bootstrap';\nconst Mypick = ({ label, ...props }) => {\n  const [fields] = useField(props);\n  console.log(fields, \"fields\")\n  return (\n    <Box as=\"div\" ml={props.m} pl={2}>\n      <FormControlLabel\n        {...fields}\n        control={<props.Component color=\"primary\" />}\n        label={label}\n      />\n    </Box>)\n}\nconst CustomDatePicker = (props) => {\n  const { setFieldValue } = useFormikContext();\n  const [fields] = useField(props);\n  console.log(\"date\", fields, props.type)\n  return (<Box as=\"span\" ><DatePicker dateFormat=\"yyyy/MM/dd\" type=\"date\" {...fields} strictParsing {...props} onChange={val => { setFieldValue(fields.name, `${val.getFullYear()}-${String(val.getMonth() + 1).padStart(2, \"0\")}-${String(val.getDate()).padStart(2, \"0\")}`) }} />  DOB</Box>)\n}\nconst MySelect = (props) => {\n  const [fields] = useField(props);\n  return (\n    <Box as=\"div\" mt={1} mb={1} ml={5} width={\"100\"} >\n      <FormControl p={1} height=\"5\">\n        <InputLabel >color</InputLabel>\n        <Select width={\"100\"} height=\"23\" variant=\"outlined\"  {...fields}>\n          <MenuItem value={\"\"}>Select Color</MenuItem>\n          <MenuItem value={\"black\"}>Black</MenuItem>\n          <MenuItem value={\"white\"}>White</MenuItem>\n          <MenuItem value={\"red\"}>Red</MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  )\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const update = useCallback((result) => dispatch(login(result.data)), [dispatch])\n  const inc = useCallback(() => dispatch(incr()), [dispatch])\n  useEffect(() => {\n    const fetchData = async (data) => {\n      console.log(data)\n      if (Object.keys(data).length > 0) {\n        const hashed = sha512(data.password);\n        // http://dev.api.staller.show/v1/horses\n        data[\"age_verified\"] = true;\n        console.log(data, \"data\")\n        const result = await instance.post('/v1/horses', { data });\n        console.log(result)\n        setLoading(true)\n        // update(result);\n      }\n      // setData(result.data);\n    };\n    fetchData(data);\n  }, [data]);\n  return (\n    <div className=\"App\">\n      <Signout />\n      <Grid container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"  >\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <Formik\n            initialValues={{ horse_name: 'second', horse_number: '2', age_verified: \"\", ushja_registered: true, dob: \"1997-10-17\", color: \"black\" }}\n            validationSchema={formValidationSchema.postHorseSchema}\n            // validate={values => {\n            //   const errors = {};\n            //   if (!values.email) {\n            //     errors.email = 'Required';\n            //   } else if (\n            //     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            //   ) {\n            //     errors.email = 'Invalid email address';\n            //   }\n            //   console.log(errors)\n            //   return errors;\n            // }}\n            onSubmit={(values, { setSubmitting }) => {\n              console.log(values)\n\n              setData(values);\n              // handleSubmit(values)\n\n              setSubmitting(false)\n\n            }}\n          >\n            {({ values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              setFieldValue,\n              isSubmitting }) => (\n                <Form>\n                  <CustomField size=\"small\" type=\"text\" name=\"horse_name\" label=\"Name\" />\n                  <CustomField type=\"text\" name=\"horse_number\" label=\"Number\" />\n                  <Mypick type=\"radio\" Component={Radio} value={true} name=\"age_verified\" label=\"Age Verification\" />\n                  <Mypick ml={-10} type=\"checkbox\" name=\"ushja_registered\" Component={Checkbox} label=\"Registration\" />\n                  <CustomDatePicker type=\"date\" name=\"dob\" onChanging={setFieldValue} />\n                  <MySelect name=\"color\" />\n                  <Button m={10} fullWidth={true} variant=\"outlined\" color=\"secondary\" type=\"submit\" disabled={isSubmitting}>Submit</Button>\n                  <pre>{JSON.stringify(values, null, 2)}</pre>\n                </Form>\n              )}\n          </Formik>\n        </Box>\n        <ShowAll />\n\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect, Fragment, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport sha512 from \"sha512\"\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {login, incr} from \"./actions\"\r\nimport styled from \"styled-components\";\r\nimport CustomField from \"./CustomFields\"\r\nimport axios from \"axios\";\r\nimport * as formValidationSchema from \"./ValidationSchema\"\r\n// import { Form } from \"react-bootstrap\";\r\nimport { Formik, Field, ErrorMessage } from 'formik';\r\nimport  {Form } from \"formik\"; \r\nimport {Redirect } from \"react-router-dom\";\r\nimport App from \"./App\"\r\nimport { TextField, Button, InputLabel, FormControl, Box, Checkbox, Radio, FormControlLabel, Select, MenuItem, Grid } from \"@material-ui/core\"\r\n\r\n// import { Button } from \"react-bootstrap\";\r\n// import { Form, Row } from 'react-bootstrap';\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nfunction Login(props) {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState({});\r\n  const [status, setLogin] = useState(false);\r\n  const update= useCallback((result)=>dispatch(login(result.data)), [dispatch])\r\n  \r\n  const inc= useCallback(()=>dispatch(incr()), [dispatch])\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async (data) => {\r\n      console.log(data)\r\n      if(Object.keys(data).length>0){\r\n        console.log(data,\"data\")\r\n      const hashed  = sha512(data.password);\r\n\r\n      await axios({\r\n        method: 'post',\r\n        url: 'http://dev.api.staller.show/v1/users/login',\r\n        data: {\r\n          email: data.email,\r\n          password: hashed.toString(\"hex\")\r\n        }\r\n      }).then((response)=>{  update(response); setLogin(true);  }).catch((err)=>{ console.log(err); setLogin(false)});  \r\n    //   setLoading(true)\r\n    // update(result);\r\n    }\r\n      // setData(result.data);\r\n    };\r\n    fetchData(data);\r\n  }, [data]);\r\n  let handleSubumit = (values) => {\r\n    console.log(values.email, values.password)\r\n  }\r\n//   console.log(\"insisew\", window.localStorage.getItem(\"accessToken\"))\r\n\r\n  if(window.localStorage.getItem(\"accessToken\") || status){\r\n    //   console.log(\"insisew 60\",props , props.location? props.location:  {from: {pathname: \"/\"} })\r\n      const {pathname} =  props.location \r\n    //   const {from}= props.location.pathname?{from: {pathname: } } props.location  {from: {pathname: \"/\"} };\r\n      console.log(\"from\", pathname, window.localStorage.getItem(\"accessToken\"))\r\n      if(props.location.pathname===\"/\"){\r\n          return <App />\r\n      }  \r\n      return (< Redirect to={pathname} />)\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Container  >\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        validationSchema={formValidationSchema.loginSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setData(values);\r\n          // handleSubmit(values)\r\n    \r\n        }}\r\n      >\r\n        { ({  values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting, }) => (\r\n\r\n\r\n    \r\n          <Form> \r\n              <CustomField type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n              <CustomField type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n              <Button m={10} fullWidth={true} variant=\"outlined\" color=\"secondary\" type=\"submit\" disabled={isSubmitting}>Login</Button>\r\n          </Form>\r\n          \r\n        ) }\r\n      </Formik>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Login from \"./Login\"\r\nconst  Authenticate=withRouter(({location})=>{\r\n    console.log(location)\r\n   return(<Login location={location} />)\r\n})\r\nexport default Authenticate\r\n   ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider } from \"react-redux\";\nimport {store} from \"./store\"\nimport './index.css';\nimport App from './App';\nimport Login from \"./Login\"\nimport * as serviceWorker from './serviceWorker';\nimport { Route,  BrowserRouter as Router, withRouter, Redirect, Switch } from 'react-router-dom';\nimport Authenticate from \"./authentication\"\nReactDOM.render(\n<Provider store={store}>\n    \n        <Router >\n    <Switch>\n             <Route exact path=\"/\" > <Authenticate /> </Route>\n             <Route  path=\"/App\" > \n             {\n                window.localStorage.getItem(\"accessToken\")? <App />: <Authenticate/>\n            }\n              </Route>\n            \n            {/* <Authenticate excat path=\"/\" /> */}\n            <Route path=\"*\"> <h1> no match </h1></Route>\n</Switch>\n\n        \n         \n        </Router>\n\n    \n     \n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}